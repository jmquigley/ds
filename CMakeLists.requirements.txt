include(GNUInstallDirs)
include(FetchContent)

if (DS_BUILD_TESTING)
  include(CTest)
endif(DS_BUILD_TESTING)

find_package(PkgConfig REQUIRED)
find_package(Threads REQUIRED)

pkg_search_module(EVENT REQUIRED libevent)

find_library(LIBEVENT_LIB event REQUIRED)
find_library(LIBEVENT_EXTRA event_extra REQUIRED)
find_library(LIBEVENT_PTHREAD_LIB event_pthreads REQUIRED)

find_library(LIBUUID_LIB uuid REQUIRED)

#
# Doxygen generation
#

find_package(Doxygen)
if (DOXYGEN_FOUND)

    # set input and output files
    set(DOXYGEN_IN ${CMAKE_CURRENT_SOURCE_DIR}/docs/Doxyfile.in)
    set(DOXYGEN_OUT ${CMAKE_CURRENT_BINARY_DIR}/Doxyfile.in)

    # request to configure the file
    configure_file(${DOXYGEN_IN} ${DOXYGEN_OUT} @ONLY)

    # note the option ALL which allows to build the docs together with the application
    add_custom_target(ds-doxygen ALL
        COMMAND ${DOXYGEN_EXECUTABLE} ${DOXYGEN_OUT}
        WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}
        COMMENT "Generating API documentation with Doxygen"
        VERBATIM)

else (DOXYGEN_FOUND)
  message("Doxygen needs to be installed to generate the doxygen documentation")

endif (DOXYGEN_FOUND)

#
# Googletest library
#

if (BUILD_TESTING)
  set(INSTALL_GTEST OFF)

  # Add this line to prevent GTest from being processed by clang-tidy
  set(CMAKE_CXX_CLANG_TIDY "" CACHE STRING "" FORCE)

  FetchContent_Declare(
    googletest
    GIT_REPOSITORY https://github.com/google/googletest
    GIT_TAG v1.17.0
  )

  # Add this to prevent exposing GTest to compilation database
  set(FETCHCONTENT_QUIET ON)

  # Add this to hide internal GTest symbols
  set(GTEST_HIDE_INTERNAL_SYMBOLS ON)

  FetchContent_MakeAvailable(googletest)

  # Restore clang-tidy setting after GTest is configured
  # set(CMAKE_CXX_CLANG_TIDY clang-tidy-${LLVM_VER})

  # include_directories(${googletest_SOURCE_DIR}/include)
  # include_directories(${googlemock_SOURCE_DIR}/include)
  set(gtest_force_shared_crt ON CACHE BOOL "" FORCE)
endif(BUILD_TESTING)
